
function parent = add_uicontrol(parent, label, type, values, fieldname, varargin)
tag = regexprep(fieldname, '[\s\\.]', '');
pos = zeros(4,1);

panel = parent;

if (isprop(parent, 'Color'))
    color = get(parent, 'Color');
elseif (isprop(parent, 'BackgroundColor'))
    color = get(parent, 'BackgroundColor');
else
    color = [1 1 1];
end

if ~isempty(label)
    panel = uipanel('Parent',parent,...
        'FontUnits',get(0,'defaultuipanelFontUnits'),...
        'Units','normalized',...
        'BackgroundColor',color,...
        'ShadowColor',get(0,'defaultuipanelShadowColor'),...
        'BorderType','etchedout',...
        'Title','',...
        'Position', pos,...
        'ParentMode','manual',...
        'Tag', sprintf('uipanel_%s', tag));
    
    % Static Label
    pos = [.025 .10 .45 0.80];
    p = uicontrol(...
        'Parent',panel,...
        'BackgroundColor',color,...
        'FontUnits',get(0,'defaultuicontrolFontUnits'),...
        'Units','normalized',...
        'String',label,...
        'Style','text',...
        'Position',pos,...
        'Children',[],...
        'KeyPressFcn',blanks(0),...
        'ParentMode','manual',...
        'CreateFcn',blanks(0),...
        'DeleteFcn',blanks(0),...
        'ButtonDownFcn',blanks(0),...
        'FontSize',GetReleaseFontSize()*GetPlatformScaling(),...
        'HorizontalAlignment','right',...
        'Tag',sprintf('uilabel_%s', tag));
    
    % Control position
    pos0 = pos;
    pos(1) = pos(1) + pos(3) + .05;
    pos(3) = (1 - pos(1) - .025);
    if (strcmp(type, 'popupmenu'))
        pos = pos + [-0.025 -0.1 .05 0];
    end
    
    % Account for the fact that the static text label is not centered
    % vertically.
    set(p, 'Position', pos0 + [0 -0.1 0 0]);
end

ctrl = uicontrol(...
    'Parent',panel,...
    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
    'Units','normalized',...
    'String',values,...
    'Style',type,...
    'Position',pos,...
    'Children',[],...
    'KeyPressFcn',blanks(0),...
    'ParentMode','manual',...
    'CreateFcn',blanks(0),...
    'DeleteFcn',blanks(0),...
    'ButtonDownFcn',blanks(0),...
    'Tag',sprintf('uicontrol_%s', tag),...
    'FontSize', GetReleaseFontSize()*GetPlatformScaling());

% Create map of key/value pair passed in via varargin.
p = containers.Map('KeyType', 'char', 'ValueType', 'Any');
for i=1:2:length(varargin)
    assert(isa(varargin{i}, 'char'));
    assert(i + 1 <= length(varargin));
    p(varargin{i}) = varargin{i+1};
end
p('FieldName') = fieldname;

if (strcmpi(type, 'popupmenu'))
    assert(p.isKey('Values')); % popups need to store an array of valid values
end

set(ctrl, 'UserData', p); % store the map in the UserData field

if (~strcmpi(type, 'pushbutton'))
    set(ctrl, 'BackgroundColor', color);
end

% Get the calling function to make the callback name.
[stack,~] = dbstack;
stack = stack(2);

% Set the callback.
set(ctrl, 'Callback', eval(sprintf('@(hObject,eventdata)%s(''uicontrol_callback'',hObject,eventdata)', ...
    strrep(stack.file, '.m', ''))));

% Initialize UI element.
init_uicontrol(ctrl);
